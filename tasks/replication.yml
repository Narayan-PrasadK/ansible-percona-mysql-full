---
- name: Ensure replication user exists on master and slave.
  mysql_user:
      name: "{{ mysql_replication_user.name }}"
      host: "{{ mysql_replication_user.host | default('%') }}"
      password: "{{ mysql_replication_user.password }}"
      priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
      state: present
      sql_log_bin: no
  become: yes
  become_user: "{{mysql_user_name}}"
  when: >
    mysql_replication_user
    and not mysql_single_server
  tags: repl

- name: Check slave replication status.
  mysql_replication:
      mode: getslave
      login_user: "{{ mysql_replication_user.name }}"
      login_password: "{{ mysql_replication_user.password }}"
      login_host: 127.0.0.1
  ignore_errors: true
  register: slave
  become: yes
  become_user: "{{mysql_user_name}}"
  when: (mysql_replication_role == 'slave') and (not mysql_single_server)
  tags: repl

- name: Check master replication status.
  mysql_replication:
      mode: getmaster
  register: master
  delegate_to: "{{ mysql_replication_master }}"
  become: yes
  become_user: "{{mysql_user_name}}"
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)) and
    (mysql_replication_role == 'slave')
    and (not mysql_single_server)
  tags: repl

- name: Configure replication on the slave.
  mysql_replication:
      mode: changemaster
      master_host: "{{ mysql_replication_master_ip }}"
      master_user: "{{ mysql_replication_user.name }}"
      master_password: "{{ mysql_replication_user.password }}"
      master_auto_position: 1
  ignore_errors: True
  become: yes
  become_user: "{{mysql_user_name}}"
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed))
    and (mysql_replication_role == 'slave')
    and (not mysql_single_server)
    and mysql_replication_user
  tags: repl

- name: Start replication.
  mysql_replication:
      mode: startslave
  become: yes
  become_user: "{{mysql_user_name}}"
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed))
    and (mysql_replication_role == 'slave')
    and (not mysql_single_server)
  tags: repl
